name: build-workspace
on:
  schedule:
    - cron: '20 20 * * MON' #once a week, like original toolbox-img cadency
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.txt'
env:
    IMAGE_NAME: ${{ github.event.repository.name }}
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
    REGISTRY_USER: ${{ github.actor }}
    REGISTRY_PASSWORD: ${{ github.token }}

jobs:
  push-ghcr:
    name: Build and push image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
    steps:
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2

      - name: Get current version
        id: labels
        run: |
          ver=$(skopeo inspect docker://quay.io/toolbx-images/ubuntu-toolbox:latest | jq -r '.Labels["org.opencontainers.image.version"]')
          echo "VERSION=$ver" >> $GITHUB_OUTPUT

      - name: Generate tags
        id: generate-tags
        shell: bash
        run: |
          TIMESTAMP="$(date +%Y%m%d)"
          IMAGE_VERSION=${{ steps.labels.outputs.VERSION }}
          COMMMIT_SHA="${GITHUB_SHA::7}"
          IMAGE_TAGS=("latest" "${IMAGE_VERSION}" "${IMAGE_VERSION}-${TIMESTAMP}" "${COMMMIT_SHA}")
          echo "image_tags=${IMAGE_TAGS[*]}" >> $GITHUB_OUTPUT

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.version=${{ steps.labels.outputs.VERSION }}
            org.opencontainers.image.description=Borderless ${{ env.IMAGE_NAME }} image
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/SimonWoodtli/workspace/main/README.md

      ## Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.generate-tags.outputs.image_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: false

      ## Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      ## https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      ## Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      ## To sign image you have to be logged in the registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      ## Sign container
      - uses: sigstore/cosign-installer@v3.0.2
      - name: Sign container image
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.registry_case.outputs.lowercase }}/${{ env.IMAGE_NAME }}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"
